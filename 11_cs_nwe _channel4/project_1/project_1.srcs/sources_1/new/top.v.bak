`timescale 1ns / 1ps
//////////////////////////////////////////////////////////////////////////////////
// Company: 
// Engineer: 
// 
// Create Date: 2019/06/15 13:33:31
// Design Name: 
// Module Name: top
// Project Name: 
// Target Devices: 
// Tool Versions: 
// Description: 
// 
// Dependencies: 
// 
// Revision:
// Revision 0.01 - File Created
// Additional Comments:
// 
//////////////////////////////////////////////////////////////////////////////////


module top
	(
        input   wire         sysclk_n               ,
        input   wire         sysclk_p               ,

//------ADC                                          
        output  wire [3:0]   adc_spi_clk            ,
        output  wire [3:0]   adc_spi_cs             ,
        output  wire [3:0]   adc_spi_sdio           ,
        input   wire         adc_spi_sdo            ,
        output  wire [3:0]   adc_rstp               ,
        
//------LMK04828
        input   wire [1:0]   lmk04828_ld            ,   
        output  wire         lmk04828_cs            ,
        output  wire         lmk04828_gpo           ,
        output  wire         lmk04828_sclk          , 
        output  wire         lmk04828_sdio          , 
        output  wire         lmk04828_sync          ,


//------ADC LMX2952         
        output  wire         adc_lmx2952_cs_1       , 
        output  wire         adc_lmx2952_sclk_1     , 
        output  wire         adc_lmx2952_sdio_1     , 
                                                      
        output  wire         adc_lmx2952_cs_2       , 
        output  wire         adc_lmx2952_sclk_2     , 
        output  wire         adc_lmx2952_sdio_2     , 


		input   wire         glblclk_n              ,
		input   wire         glblclk_p              ,
		input   wire         ad1_ref_clk_p	        ,
		input   wire         ad1_ref_clk_n	        ,
		input   wire         ad2_ref_clk_p	        ,
		input   wire         ad2_ref_clk_n	        ,
		input   wire         ad3_ref_clk_p	        ,
		input   wire         ad3_ref_clk_n	        ,
		input   wire         ad4_ref_clk_p	        ,
		input   wire         ad4_ref_clk_n	        ,
			
		input   wire [7:0]   ad1_rxp                ,
		input   wire [7:0]   ad1_rxn                ,  
		input   wire [7:0]   ad2_rxp                ,
		input   wire [7:0]   ad2_rxn                ,
		input   wire [7:0]   ad3_rxp                ,
		input   wire [7:0]   ad3_rxn                ,
		input   wire [7:0]   ad4_rxp                ,
		input   wire [7:0]   ad4_rxn                ,
			
		output  wire         ad1_sync_p             ,
		output  wire         ad1_sync_n             ,  
		output  wire         ad2_sync_p             ,
		output  wire         ad2_sync_n             ,
		output  wire         ad3_sync_p             ,
		output  wire         ad3_sync_n             ,
		output  wire         ad4_sync_p             ,
		output  wire         ad4_sync_n             ,
		
		
		
		
		    
		input   wire         rx_sysref_p            ,
		input   wire         rx_sysref_n            
		         

	);
	    wire        syncb                   ;
	    wire        sysref                  ;
(*keep = "true"*)	    wire        rx_sysref               ;
	    
	    wire        sysclk                  ;
	    wire        sysclk_locked           ;  
	    
	    wire        adc_clk1                ;
	    wire        adc_rstn1               ;
	    wire        adc_clk2                ;
	    wire        adc_rstn2               ;
	    wire        adc_clk3                ;
	    wire        adc_rstn3               ;
	    wire        adc_clk4                ;
	    wire        adc_rstn4               ;
	    
	
	    wire        adc_lmx2952_cs          ;
	    wire        adc_lmx2952_sclk        ;
	    wire        adc_lmx2952_sdio        ;
	    wire        adc_lmx2952_sdo         ;
	    
	    wire        adc_spi_cs_ps           ;
        wire        adc_spi_clk_ps          ;
        wire        adc_spi_sdio_ps         ;
        wire        adc_rstp_ps             ;

	    
	    wire        lmk04828_sync_ps        ;
	    wire        lmk04828_switch         ;
	    
	    wire        jesd204b_rstp           ;
	    
	    wire        adc_sync                ;

        wire    [01:00]     config_done         ;
        wire                sysref_in           ;  

        wire    [255:00]    adc1_data_all       ; 
        wire    [255:00]    adc2_data_all       ;
        wire    [255:00]    adc3_data_all       ;
        wire    [255:00]    adc4_data_all       ;
        
        wire                adc1_data_tvalid    ;
        wire                adc2_data_tvalid    ;
        wire                adc3_data_tvalid    ;
        wire                adc4_data_tvalid    ;
           
        wire                adc1_sync           ;
        wire                adc2_sync           ;
        wire                adc3_sync           ;
        wire                adc4_sync           ;
        
        
	    
	    reg                 adc1_sync_r         ;
	    reg                 adc1_sync_r1        ;
	    reg     [15:00]     adc1_sync_cnt       ;
	    reg                 adc1_sync_done      ;
	    
	    reg                 sdk_reset           ;
	    
	    
	    assign      adc_lmx2952_cs_1    =   adc_lmx2952_cs       ;
        assign      adc_lmx2952_sclk_1  =   adc_lmx2952_sclk     ;
        assign      adc_lmx2952_sdio_1  =   adc_lmx2952_sdio     ;   
        
        assign      adc_lmx2952_cs_2    =   adc_lmx2952_cs       ;
        assign      adc_lmx2952_sclk_2  =   adc_lmx2952_sclk     ;
        assign      adc_lmx2952_sdio_2  =   adc_lmx2952_sdio     ;
        
        assign      lmk04828_sync       =   lmk04828_switch ? lmk04828_sync_ps : sysref  ;
        assign      adc_sync            =   adc1_sync_done       ;
        
        assign      sysref_in           =   config_done[0]  ? rx_sysref : sysref        ;
                
        assign      adc_spi_clk         =   {adc_spi_clk_ps   , adc_spi_clk_ps  , adc_spi_clk_ps  , adc_spi_clk_ps  } ;
        assign      adc_spi_cs          =   {adc_spi_cs_ps    , adc_spi_cs_ps   , adc_spi_cs_ps   , adc_spi_cs_ps   } ;
        assign      adc_spi_sdio        =   {adc_spi_sdio_ps  , adc_spi_sdio_ps , adc_spi_sdio_ps , adc_spi_sdio_ps } ;
        assign      adc_rstp            =   {adc_rstp_ps      , adc_rstp_ps     , adc_rstp_ps     , adc_rstp_ps     } ;
            
        
        
        
 IBUFDS#(
      .DIFF_TERM("TRUE"),       // Differential Termination
      .IBUF_LOW_PWR("FALSE"),     // Low power="TRUE", Highest performance="FALSE" 
      .IOSTANDARD("LVDS")     // Specify the input I/O standard
   ) i_sysref_ibufds (
    .I  (rx_sysref_p),
    .IB (rx_sysref_n),
    .O  (rx_sysref)
  );     
        
	  
      sys_clk u_sysclk                          
   (                                             
    // Clock out ports                           
    .clk_out1(sysclk),     // output clk_out1  
    // Status and control signals                
    .reset(1'b0), // input reset                
    .locked(sysclk_locked),       // output locked      
   // Clock in ports                             
    .clk_in1_p(sysclk_p),    // input clk_in1_p 
    .clk_in1_n(sysclk_n));    // input clk_in1_n	  
	  
	
	
	
	ADC_wrapper u1_ADC_wrapper
	(
	    .clk_100m           (sysclk                 ),
	    .adc_clk            (adc_clk1               ),//250M
	    .sdk_reset          (sdk_reset              ),
	    .jesd204b_rstp      (jesd204b_rstp          ), 
	    		
		.adc_lmx2952_cs     (adc_lmx2952_cs         ),
        .adc_lmx2952_sclk   (adc_lmx2952_sclk       ),
        .adc_lmx2952_sdio   (adc_lmx2952_sdio       ),
        .adc_lmx2952_sdo    (adc_lmx2952_sdo        ), 
         
        
        .lmk04828_cs        (lmk04828_cs            ), 
        .lmk04828_gpo       (lmk04828_gpo           ),
        .lmk04828_ld        (lmk04828_ld            ),
        .lmk04828_sclk      (lmk04828_sclk          ),
        .lmk04828_sdio      (lmk04828_sdio          ),
        .lmk04828_sdo       (lmk04828_sdo           ),
        .lmk04828_sync      (lmk04828_sync_ps       ),//(          ),
        .lmk04828_switch    (lmk04828_switch        ),
            
            
		.cs_n               (adc_spi_cs_ps          ),
		.sclk               (adc_spi_clk_ps         ),
		.miso               (adc_spi_sdo            ),
		.mosi               (adc_spi_sdio_ps        ),
        .rst_spi            (adc_rstp_ps            ),
        
        .config_done        (config_done            ),
		.adc_sync           (adc_sync               ),
		.sysref             (sysref                 )          
	);
	
	adc_top u2_adc_top(
	    .axi_clk			(sysclk                 ),  	      
	    .jesd_rst_p		    (jesd204b_rstp          ),
	    .axi_cfg_rstn	    (!jesd204b_rstp         ),

	    .global_clk_p		(glblclk_p              ),
	    .global_clk_n		(glblclk_n              ),

	    .ad1_ref_clk_p	    (ad1_ref_clk_p	        ),
	    .ad1_ref_clk_n	    (ad1_ref_clk_n	        ),
	    .ad2_ref_clk_p	    (ad2_ref_clk_p	        ),
	    .ad2_ref_clk_n	    (ad2_ref_clk_n	        ),
	    .ad3_ref_clk_p	    (ad3_ref_clk_p	        ),
	    .ad3_ref_clk_n	    (ad3_ref_clk_n	        ),
	    .ad4_ref_clk_p	    (ad4_ref_clk_p	        ),
	    .ad4_ref_clk_n	    (ad4_ref_clk_n	        ),
	    
	    .ad1_rxp            (ad1_rxp                ),
	    .ad1_rxn            (ad1_rxn                ),
	    .ad2_rxp            (ad2_rxp                ),
	    .ad2_rxn            (ad2_rxn                ),
	    .ad3_rxp            (ad3_rxp                ),
	    .ad3_rxn            (ad3_rxn                ),
	    .ad4_rxp            (ad4_rxp                ),
	    .ad4_rxn            (ad4_rxn                ),
	   
	    .ad1_sync_p         (ad1_sync_p             ),
	    .ad1_sync_n         (ad1_sync_n             ),
	    .ad2_sync_p         (ad2_sync_p             ),
	    .ad2_sync_n         (ad2_sync_n             ),
	    .ad3_sync_p         (ad3_sync_p             ),
	    .ad3_sync_n         (ad3_sync_n             ),
	    .ad4_sync_p         (ad4_sync_p             ),
	    .ad4_sync_n         (ad4_sync_n             ),
	  	    
	    .rx_sysref          (sysref_in              ),
	    
	    .rx_aclk1           (adc_clk1               ),
	    .rx_aresetn1        (adc_rstn1              ),  
	    
	    .rx_sync1           (adc1_sync              ),
	    .rx_tdata1          (adc1_data_all          ),
	    .rx_tvalid1         (adc1_data_tvalid       ),  
	    .rx_sync2           (adc2_sync              ), 
	    .rx_tdata2          (adc2_data_all          ), 
	    .rx_tvalid2         (adc2_data_tvalid       ), 
	    .rx_sync3           (adc3_sync              ), 
	    .rx_tdata3          (adc3_data_all          ), 
	    .rx_tvalid3         (adc3_data_tvalid       ), 
	    .rx_sync4           (adc4_sync              ), 
	    .rx_tdata4          (adc4_data_all          ), 
	    .rx_tvalid4         (adc4_data_tvalid       ) 
	    
		
	);
	
	always @(posedge adc_clk1 or negedge adc_rstn1)
	begin
	    if(!adc_rstn1)
	    begin
	        adc1_sync_r     <=  1'b0    ;
	        adc1_sync_r1    <=  1'b0    ;
	    end
	    else 
	    begin
	        adc1_sync_r     <=  adc1_sync    ;
	        adc1_sync_r1    <=  adc1_sync_r  ;
	    end	        
	end
	
	always @(posedge adc_clk1 or negedge adc_rstn1)
	begin
	    if(!adc_rstn1)	
	    begin
	        adc1_sync_done  <=  1'b0    ;
	        adc1_sync_cnt   <=  16'b0   ;
	    end
	    else if(adc1_sync_r == 1'b1 && adc1_sync_r1 == 1'b0)
	    begin
	        adc1_sync_done  <=  1'b0    ;
	        adc1_sync_cnt   <=  16'b1   ;
	    end
	    else if(adc1_sync_r1 == 1'b1 &&  adc1_sync_cnt < 16'd25000)
	    begin
	        adc1_sync_done  <=  1'b0    ;
	        adc1_sync_cnt   <=  adc1_sync_cnt + 1'b1   ;
	    end	        
	    else if(adc1_sync_cnt == 16'd25000)
	    begin
	        adc1_sync_done  <=  1'b1    ;
	        adc1_sync_cnt   <=  adc1_sync_cnt    ;
	    end		        
	    else
	    begin
	        adc1_sync_done  <=  adc1_sync_done   ;
	        adc1_sync_cnt   <=  adc1_sync_cnt    ;
	    end			
	end      
	
	always @(posedge sysclk or negedge sysclk_locked    )
	begin
	    if(!sysclk_locked)
	    begin
	        sdk_reset   <=  1'b1    ;
	    end
	    else if(config_done[1] == 1'b1 && adc1_sync_done == 1'b0)
	    begin
	        sdk_reset   <=  1'b1    ;
	    end
	    else
	    begin
	       sdk_reset    <=  1'b0    ;
	    end
	end	        
	
	
	  
	
	adc_analysis u3_adc_analysis(
	
	.adc_clk1           (adc_clk1           ),
	.adc_rst1           (!adc_rstn1         ),
	.adc_clk2           (adc_clk2           ),
	.adc_rst2           (!adc_rstn2         ),
	.adc_clk3           (adc_clk3           ),
	.adc_rst3           (!adc_rstn3         ),
	.adc_clk4           (adc_clk4           ),
	.adc_rst4           (!adc_rstn4         ),
	.data_valid1        (adc1_data_tvalid   ),
	.data_in1           (adc1_data_all      ),
	.data_valid2        (adc2_data_tvalid   ),
	.data_in2           (adc2_data_all      ),
	.data_valid3        (adc3_data_tvalid   ),
	.data_in3           (adc3_data_all      ),
	.data_valid4        (adc4_data_tvalid   ),
	.data_in4           (adc4_data_all      )
	
	);
	
endmodule
